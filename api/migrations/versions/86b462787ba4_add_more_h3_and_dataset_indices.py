"""Add more h3 and dataset indices

Revision ID: 86b462787ba4
Revises: 5cd5355da939
Create Date: 2023-10-23 05:02:22.488219

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "86b462787ba4"
down_revision: Union[str, None] = "5cd5355da939"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        "ix_datasets_bbox_srid",
        "datasets",
        [sa.text("st_setsrid(bbox, 4326)")],
        unique=False,
        postgresql_using="gist",
    )
    op.create_index(
        "ix_h3_data_h3_index_res",
        "h3_data",
        [sa.text("h3_get_resolution(h3_index)")],
        unique=False,
    )
    op.create_index(
        "ix_h3_data_res1_parent_dataset_id",
        "h3_data",
        [sa.text("h3_cell_to_parent(h3_index, 1)"), "dataset_id"],
        unique=False,
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 1"),
    )
    op.create_index(
        "ix_h3_data_res2_parent_dataset_id",
        "h3_data",
        [sa.text("h3_cell_to_parent(h3_index, 2)"), "dataset_id"],
        unique=False,
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 2"),
    )
    op.create_index(
        "ix_h3_data_res3_parent_dataset_id",
        "h3_data",
        [sa.text("h3_cell_to_parent(h3_index, 3)"), "dataset_id"],
        unique=False,
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 3"),
    )
    op.create_index(
        "ix_h3_data_res4_parent_dataset_id",
        "h3_data",
        [sa.text("h3_cell_to_parent(h3_index, 4)"), "dataset_id"],
        unique=False,
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 4"),
    )
    op.create_index(
        "ix_h3_data_res5_parent_dataset_id",
        "h3_data",
        [sa.text("h3_cell_to_parent(h3_index, 5)"), "dataset_id"],
        unique=False,
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 5"),
    )
    op.create_index(
        "ix_h3_data_res6_parent_dataset_id",
        "h3_data",
        [sa.text("h3_cell_to_parent(h3_index, 6)"), "dataset_id"],
        unique=False,
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 6"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_h3_data_res6_parent_dataset_id",
        table_name="h3_data",
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 6"),
    )
    op.drop_index(
        "ix_h3_data_res5_parent_dataset_id",
        table_name="h3_data",
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 5"),
    )
    op.drop_index(
        "ix_h3_data_res4_parent_dataset_id",
        table_name="h3_data",
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 4"),
    )
    op.drop_index(
        "ix_h3_data_res3_parent_dataset_id",
        table_name="h3_data",
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 3"),
    )
    op.drop_index(
        "ix_h3_data_res2_parent_dataset_id",
        table_name="h3_data",
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 2"),
    )
    op.drop_index(
        "ix_h3_data_res1_parent_dataset_id",
        table_name="h3_data",
        postgresql_where=sa.text("h3_get_resolution(h3_index) > 1"),
    )
    op.drop_index("ix_h3_data_h3_index_res", table_name="h3_data")
    op.drop_index(
        "ix_datasets_bbox_srid", table_name="datasets", postgresql_using="gist"
    )
    # ### end Alembic commands ###
