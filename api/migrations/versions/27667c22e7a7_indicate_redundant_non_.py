"""Add fields to indicate redundant, non-compact-member cells

Revision ID: 27667c22e7a7
Revises: 86b462787ba4
Create Date: 2023-11-23 13:31:04.453582

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '27667c22e7a7'
down_revision: Union[str, None] = '86b462787ba4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('datasets', sa.Column('has_compact_only', sa.Boolean(), nullable=False))
    op.add_column('h3_data', sa.Column('is_redundant_parent', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_h3_data_is_redundant_parent'), 'h3_data', ['is_redundant_parent'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_h3_data_is_redundant_parent'), table_name='h3_data')
    op.drop_column('h3_data', 'is_redundant_parent')
    op.drop_column('datasets', 'has_compact_only')
    # ### end Alembic commands ###
