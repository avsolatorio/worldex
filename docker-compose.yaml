version: "3.9"

x-db-variables: &db-variables
  POSTGRES_DB_NAME: worldex
  POSTGRES_USER: worldex

services:
  ui:
    build:
      context: ./ui/
      dockerfile: dev.Dockerfile
    command: yarn start
    ports:
      - 5173:5173
    volumes:
      - ./ui:/app
    env_file:
      - ./ui/.env
    depends_on:
      - api
  api:
    build:
      context: ./api
    command: poetry run uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - 8000:8000
    environment:
      PROJECT_NAME: "Worldex API (local)"
      VERSION: "0.1.0"
      POSTGRES_HOST: db
      <<: *db-variables
    env_file:
      - secrets/postgres_password.env
    volumes:
      - api_venv:/app/.venv
      - ./api:/app
      - /tmp/datasets:/datasets
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail localhost:8000/health_check || exit 1
  db:
    build: ./postgis-h3
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      <<: *db-variables
    env_file:
      - secrets/postgres_password.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  # pgweb:
  #   image: sosedoff/pgweb
  #   ports:
  #     - 8081:8081
  #   environment:
  #     <<: *db-variables
  #     DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB_NAME}?sslmode=disable
  #   depends_on:
  #     db:
  #       condition: service_healthy
volumes:
  pg_data:
  api_venv:
